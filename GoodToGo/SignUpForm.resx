<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="Btn_Cancle.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAB4AAAAeCAYAAAA7MK6iAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAFlSURBVEhL7dbLLgRBGIbhuQkLx1hasGKHC5AgrsPxWuwI
        sbC0d7gT3ABh57BDeN9EJxX5q7umW4zFfMmTdMpU1XSp+mt6w/zHTGEHV7jB6zefbdvGJH4t4zjEOz4b
        fOAM0+iUDbwgmqTOM9bRKnvwDaKBS9h3F33FN+0yacUxit98Am2WN8dlH0NjThAN0MURauORye3eRSzg
        IWmr2DaPpaQt5ZiuZDae06ijHNjMIp3cZ9uMXyztk9pCNpeIOimdoJo8aov66hzZ3CLqVPk5UemkssJl
        U7KbHzGHKjO4R/TZlGNn03biO0SfTT0hm4Et9cA2l1db1Eldj9MmsvE+zRUQi0NdAfFvy0lb6g21BcQc
        I+rcxQEa48VvYY8GaMPdPIqirKDkF0cTr8U19BUv8a4/BKz9reIl3mbZXd5VdMoI9uHOjCZJ+ZanKP6f
        lsTj4NV2gWtYXuWzxcFz2nhkhvnj9Hpf2mGQzguNwwsAAAAASUVORK5CYII=
</value>
  </data>
  <data name="BtnMinimize.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABcAAAAXCAYAAADgKtSgAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAADqSURBVEhL3dVJCgIxEIXhPo3TVsWN53Gh6MIBr6JXEG8g
        TlfRW6ig/wMbQqe6k/ROH3z0pirEkJTZX6eNFbbYfb9LtFA7A1zxrnBBH0kZ4QFrwaIX1ojKDNYiIRNU
        RkfxhNUcor4eShM645ATzHRgNaRqwouum1WcagEvur9u0Q2HCHe4fRt42cMtGiImqnP7tI6X4s61I2un
        RVE715N2i+qaw4tmhVWcqgEzmhVWQ6wjSqMhVPeFahZ1UZkprOaQMaKSMhX1S6OnYh4NoTOsBXM64+BR
        VEWzQtdU91f/RPrqiZfeil9Pln0ASjH3jHvDrnAAAAAASUVORK5CYII=
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAPgAAAH8AAAD/gAAB/8AAA//gAAf/+AAf8=
</value>
  </data>
</root>